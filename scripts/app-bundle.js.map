{"version":3,"sources":["src/app.ts","src/environment.ts","src/main.ts","src/resources/index.ts"],"names":[],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {HttpClient, json} from 'aurelia-fetch-client';\nimport {fetch} from 'whatwg-fetch';\nimport {bindable} from 'aurelia-framework';\nimport 'bootstrap';\nimport $ from 'bootstrap';\nimport 'jquery';\n\n\nlet client = new HttpClient();\n \n\nexport class App { \n\n    message = 'Click The Button Below To Retrieve The Data:';\n    fetchdata = 'Get List Of Users'; \n    instruction = 'Click on the arrow next to a user to see more detailed info.';\n    \n        \n    UserRecords;\n    Phone;\n    Cell;\n    Address; \n    Photo; \n    FullName;\n    Email;\n    UserArrays;\n    constructor() {\n        this.UserRecords = null;\n        this.Phone = null;\n        this.Cell = null;\n        this.Address = null;\n        this.Photo = null;\n        this.FullName = null;\n        this.Email = null;\n        this.UserArrays = null;\n        } \n        \n        /*Fetch data*/\n        getData()\n        {                \n                 client.fetch('https://randomuser.me/api/?results=50')\n                      .then(response => response.json())\n                      .then(data => {                         \n                         var userData = data;  \n                         var array = [];\n                         this.UserRecords = userData.results;\n                         \n                      });\n                          \n                      document.getElementById('table-data').style.display = \"block\";\n                      document.getElementById('instruction').style.display = \"block\";\n\n                   \n        }\n        \n        on(target) {\n        \n            var j = 0;            \n            \n            /*Finds The What ID has been clicked an returnd the user array index of that person. Display that's person's detailed info*/\n            for (var i = 0; i < this.UserRecords.length; i++) {\n                  \n                  var myId = this.UserRecords[i].login.username;                  \n                  \n                  if (myId === target.id) {\n                  \n                        j = i;\n                  }\n                                                \n            }\n            \n             \n            this.Phone = this.UserRecords[j].phone;\n            this.Cell = this.UserRecords[j].cell;\n            this.Address = this.UserRecords[j].location.street + \", \" + this.UserRecords[j].location.city + \", \" + this.UserRecords[j].location.state + \", \" + this.UserRecords[j].location.postcode;\n            this.Photo = this.UserRecords[j].picture.thumbnail;\n            this.FullName = this.UserRecords[j].name.first + \" \" + this.UserRecords[j].name.last;\n            this.Email = this.UserRecords[j].email;\n            \n                    \n            document.getElementById(\"overlay\").style.display = \"block\";\n        }\n\n        off() {\n            document.getElementById(\"overlay\").style.display = \"none\";\n        }\n           \n            \n}\n\n\n ","export default {\n  debug: true,\n  testing: true\n};\n","import {Aurelia} from 'aurelia-framework';\nimport environment from './environment';\nimport {HttpClient} from 'aurelia-fetch-client';\nimport {fetch} from 'whatwg-fetch';\nimport 'bootstrap';\nimport $ from 'bootstrap';\nimport 'jquery';\n\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .plugin('aurelia-bootstrap')\n    .feature('resources');\n    \n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  //config.globalResources([]);\n}\n"],"sourceRoot":".."}